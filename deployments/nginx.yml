---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: "sudoservers.com"
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: nginx-service
            port:
              number: 80
  - host: "*.sudoservers.com"
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: nginx-service
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |
    user www-data;
    worker_processes auto;

    events {
        worker_connections 1024;
    }
    http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_names_hash_bucket_size 64;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format custom_log_format '$remote_addr - $remote_user [$time_local] '
                                     '"$request" $status $body_bytes_sent '
                                     '"$http_referer" "$http_user_agent" $server_name';

        access_log /var/log/nginx/access.log custom_log_format;
        error_log /var/log/nginx/error.log;

        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        upstream storage {
            server 192.168.1.13;
        }

        upstream downloads {
          server transmission-service:9091;
        }

        upstream unifi {
          server unifi-service:8443;
        }

        upstream plex {
            server 192.168.1.13:32400;
        }

        upstream bridge {
            server 192.168.1.13:8581;
        }

        include /etc/nginx/conf.d/*.conf;
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            port: http
            path: /
            scheme: HTTP
        volumeMounts:
        - name: nginx-nfs
          mountPath: /var/www
          subPath: www
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/snippets
          subPath: snippets
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/conf.d/sudoservers.conf
          subPath: conf.d/sudoservers.conf
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/conf.d/downloads.conf
          subPath: conf.d/downloads.conf
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/conf.d/storage.conf
          subPath: conf.d/storage.conf
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/conf.d/unifi.conf
          subPath: conf.d/unifi.conf
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/conf.d/plex.conf
          subPath: conf.d/plex.conf
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/conf.d/pihole.conf
          subPath: conf.d/pihole.conf
          readOnly: true
        - name: nginx-nfs
          mountPath: /etc/nginx/conf.d/homebridge.conf
          subPath: conf.d/homebridge.conf
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: nginx-nfs
        nfs:
          server: 192.168.1.13
          path: /storage/tank/kubernetes/nginx
